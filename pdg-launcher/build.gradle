plugins {
  id 'application'
}

dependencies {
  // Parsing API
  implementation project(':pdg-api')

  // Apache Batik
  implementation group: 'org.apache.xmlgraphics', name: 'batik-swing', version: '1.17'

  // Apache Commons CLI
  implementation group: 'commons-cli', name: 'commons-cli', version: '1.6.0'

  // Apache Commons Collections
  implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

  // Apache Log4j2
  runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jVersion}"

  // GraalVM JS
  runtimeOnly group: 'org.graalvm.js', name: 'js', version: '23.0.2'

  // FlatLaf
  runtimeOnly group: 'com.formdev', name: 'flatlaf', version: '3.2.5'

  // jSystemThemeDetector
  implementation group: 'com.github.Dansoftowner', name: 'jSystemThemeDetector', version: '3.8'

}

ext {
  javaMainClass = 'main.PDGLauncher'
}

application {
  mainClass = javaMainClass
}

jar {
  manifest {
    attributes(
      "Main-Class": javaMainClass
    )
  }
}

task uberJar(type: Jar) {
  manifest {
    attributes(
      "Main-Class": javaMainClass,
      'Multi-Release': 'true'
    )
  }

  archiveClassifier = 'uber'

  from sourceSets.main.output

  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

  dependsOn configurations.runtimeClasspath
  from {
    configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
  }
}
